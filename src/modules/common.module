const mongoose = require('mongoose');

exports.buildResponse = (model, data) => {
    let response = data;
    response.name = `${model}/${data._id}`;
    response.create_time = setTimeStamp(data.create_time);
    response.update_time = setTimeStamp(data.update_time);
    response.delete_time = setTimeStamp(data.delete_time)
    if(response.delete_time != null){
        response.lifecycle_state = 2
    }else{
        response.lifecycle_state = 1;
    }
    delete data._id;
    return response;
};

setTimeStamp = (date) => {
    let timestamp = {};
    if (date != null) {
        timestamp = {
            'seconds': new Date(date).getTime()
        }
    } else {
        timestamp = null;
    }
    return timestamp;
}

exports.get_Id = (name) => {
    return mongoose.Types.ObjectId(name.substring(name.indexOf('/') + 1));
};

exports.isValidString = (e) => {
    if ((e != undefined || e != null) && e != "") {
        return true;
    }
}

exports.getOrderByObject = (element) => {
    var e = element.split(" ");
    if (this.isValidString(e) && e.length == 2) {
        let name, value = "";

        if (this.isValidString(e[0])) {
            name = e[0];
        }

        if (this.isValidString(e[1])) {
            value = e[1].toLowerCase() == "desc" ? -1 : 1;
        }
        return {
            [name] : value
        }
    }
}


