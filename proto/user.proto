
syntax = "proto3";

package abhyaas;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/descriptor.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "exambroad.proto";
import "medium.proto";
import "role.proto";

// The User service definition.
service UserService {
  option (google.api.default_host) = "cloudresourcemanager.googleapis.com";
  option (google.api.oauth_scopes) =
      "https://www.googleapis.com/auth/Users,"
      "https://www.googleapis.com/auth/Users.read-only,"
      "https://www.googleapis.com/auth/ResourceUser,"
      "https://www.googleapis.com/auth/ResourceUser.read-only";
  // List provides a strongly consistent view of all Users.
  // Filters and order by can be applied.
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {
      get: "/v1/users"
    };
    option (google.api.method_signature) = "filter";
  }

  // Retrieves a User identified by the supplied resource name.
  // Valid User resource names have the format `users/{user_id}`
  // (for example, `users/1234`).
  rpc GetUser(GetUserRequest) returns (User) {
    option (google.api.http) = {
      get: "/v1/{name=users/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // Creates a User. In order to succeed, the addition of this new User
  // must not violate the following constraint:
  //
  // + The User's display_name must be distinct from all other Users.
  //
  // If the operation fails due to a User constraint violation, the
  // error code FAILED_PRECONDITION is returned along with an error description.
  rpc CreateUser(CreateUserRequest) returns (User) {
    option (google.api.http) = {
      post: "/v1/users"
      body: "user"
    };
  }

  // Updates a User, changing its display_name.
  // Changes to the User fields will be rejected on violations described in
  // the [CreateUser][scudos.database.v1.CreateUser] documentation.
  rpc UpdateUser(UpdateUserRequest) returns (User) {
    option (google.api.http) = {
      patch: "/v1/{user.name=users/*}"
      body: "user"
    };
    option (google.api.method_signature) = "user,update_mask";
  }

  // Requests deletion of a User.
  // error code FAILED_PRECONDITION is returned.
  rpc DeleteUser(DeleteUserRequest) returns (User) {
    option (google.api.http) = {
      delete: "/v1/{name=users/*}"
    };
    option (google.api.method_signature) = "name";
  }
}

// The request message containing the User's first name, last name , gender,
// user-id, password, email-id, phone , role
message User {
  // User lifecycle states.
  enum LifecycleState {
    // Unspecified state.
    LIFECYCLE_STATE_UNSPECIFIED = 0;

    // The normal and active state.
    ACTIVE = 1;

    // The User has been marked for deletion by the user.
    DELETE_REQUESTED = 2;
  }

  // Gender
  enum Gender {
    MALE = 0;

    FEMALE = 1;

    OTHER = 2;
  }

  // Required. The resource name of the User.
  // Its format is `users/{user_id}`
  // for example: "users/1".
  // The name is ignored when creating a User.
  string name = 1 [(google.api.field_behavior) = REQUIRED];

  // The user’s first name.It is a REQUIRED
  string first_name = 2 [(google.api.field_behavior) = REQUIRED];

  // The user’s last name.It is a OPTIONAL
  string last_name = 3 [(google.api.field_behavior) = OPTIONAL];

  // The user’s user id.It is a REQUIRED
  string user_id = 4 [(google.api.field_behavior) = REQUIRED];

  // The user's gender.It is a REQUIRED
  Gender gender = 5 [(google.api.field_behavior) = REQUIRED];

  // The user’s email.It is a REQUIRED
  string email = 6 [(google.api.field_behavior) = REQUIRED];

  // The user’s phone .It is a REQUIRED
  int64 phone = 7 [(google.api.field_behavior) = REQUIRED];

  // The user’s password .It is a REQUIRED
  string password = 8 [(google.api.field_behavior) = REQUIRED];

  // The user’s board of examination .It is a OPTIONAL
  repeated string examBoards = 9 [(google.api.field_behavior) = OPTIONAL];

  // The user’s medium of instrution.It is a OPTIONAL
  repeated string mediums = 10 [(google.api.field_behavior) = OPTIONAL];

  // The user’s role .It is a REQUIRED
  string role = 11 [(google.api.field_behavior) = REQUIRED];

  // Output only. Timestamp when the User was created. Assigned by the server.
  google.protobuf.Timestamp create_time = 12 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. Timestamp when the User was last modified.
  google.protobuf.Timestamp update_time =13 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. Timestamp when the User was last deleted.
  google.protobuf.Timestamp delete_time = 14 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Output only. The lifecycle state of the User.
  LifecycleState lifecycle_state = 15 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// The CreateUser request message.
message CreateUserRequest {
  // Required. The User being created.
  // `name` must be empty. Only `display_name` is considered.
  User user = 1 [(google.api.field_behavior) = REQUIRED];
}


// The request message for updating a User's display name, description,color
message UpdateUserRequest {
    // Required. The new definition of the User. It must include a
    // a `name` and `display_name` field. The other fields
    // will be ignored.
    User user = 1 [(google.api.field_behavior) = REQUIRED];

    // Required. Provide fields that should be updated.
    // Supported fields: `display_name`.
    google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = REQUIRED];
}

  // The DeleteUser request message.
message DeleteUserRequest {
    // Required. The resource name of the User to be deleted.
    // Must be of the form `Users/{User_id}`.
    string name = 1 [
      (google.api.field_behavior) = REQUIRED,
      (google.api.resource_reference) = {
        type: "User"
      }
    ];
}


  // The GetUser request message.
message GetUserRequest {
    // Required. The resource name of the User to retrieve.
    // Must be of the form `Users/{User_id}`.
    string name = 1 [
      (google.api.field_behavior) = REQUIRED,
      (google.api.resource_reference) = {
        type: "User"
      }
    ];
}

// The ListUsers request message.
message ListUsersRequest {
  // Optional. The maximum number of Users to return in the response.
  // If the page size is not set, the default of 10 is taken.
    int32 page_size = 1 [(google.api.field_behavior) = OPTIONAL];

  // Optional. A pagination token returned from a previous call to `ListUsers`
  // that indicates where this listing should continue from.
    string page_token = 2 [(google.api.field_behavior) = OPTIONAL];

  // Filer criteria used to select the Users to return.
  // If no filter criteria is specified then all accessible Users will be
  // returned, regarding page_size.
  //
  // Query expressions can be used to restrict results based upon `display_name`,
  // where the operators `=`,`>`,`>=`,`<=`,`<`, `NOT`, `AND`,  `OR` , `LIKE` where
  // like can be used along with the suffix wildcard symbol `*`.
  //
  // String Fields, e.g., display_name in a query expression should use escaped quotes
  // for values that include whitespace to prevent unexpected behavior.
  //
  // Some example queries are:
  //
  // * Query "display_name LIKE 'Test*'" returns User resources whose display name
  // starts with "Test".
  // * Query "display_name = 'Test*'" returns the User with the display name 'Test*'.
  // * Query "display_name LIKE 'Test*' AND display_name = 'Test*'" shows the concatenation of criteria.
  string filter = 3 [(google.api.field_behavior) = OPTIONAL];

  // Optional. Order the result set by field names.
  // The default sorting order is ascending.
  // To specify descending order for a field, a suffix " desc" must be appended to the field name.
  // For example: "foo desc,bar"
  // Redundant space characters in the syntax are insignificant.
  // For example: "foo,bar desc" and "  foo ,  bar  desc  " are equivalent.
  // Default order is by display_name ascending.
  string order_by = 4 [(google.api.field_behavior) = OPTIONAL];

  // Optional. Displays deleted Users
  // Defaults to false.
  bool show_deleted = 5 [(google.api.field_behavior) = OPTIONAL];
}

// The ListUsers response message.
message ListUsersResponse {
  // A possibly paginated list of Users.
  repeated User users = 1;

  // // A pagination token returned from a previous call to `ListUsers`
  // // that indicates from where listing should continue.
  string next_page_token = 2;

  // // // The total count of the Users regarding the reqest parameters.
  int32 total_size = 3;
}
